#import <Foundation/Foundation.h>
/*
 *     Generated by class-dump 3.0.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004 by Steve Nygard.
 */



struct OpaqueAEDataStorageType;

struct OpaqueDCMObjectID;

struct OpaqueDCMObjectRef;

/*
 * File: /Library/Widgets/Dictionary.wdgt/Dictionary.widgetplugin/Contents/MacOS/Dictionary
 */



@interface WordScriptObject : NSObject
{
}

+ (id)webScriptNameForSelector:(SEL)fp8;
+ (BOOL)isSelectorExcludedFromWebScript:(SEL)fp8;
+ (BOOL)isKeyExcludedFromWebScript:(const char *)fp8;
- (id)dictionary:(id)fp8;
- (id)key:(id)fp8;
- (id)uniqueID:(id)fp8;
- (id)headword:(id)fp8;
- (id)data:(id)fp8;
- (id)dataForWords:(id)fp8;
- (id)stringForDefinition:(id)fp8;
- (id)processWithXSLT:(id)fp8;
- (id)xsltData:(id)fp8;
- (id)next:(id)fp8;
- (id)previous:(id)fp8;
- (id)word:(id)fp8 atIndex:(id)fp12;
- (id)index:(id)fp8;

@end

@interface DictionaryScriptObject : NSObject
{
}

+ (id)webScriptNameForSelector:(SEL)fp8;
+ (BOOL)isSelectorExcludedFromWebScript:(SEL)fp8;
+ (BOOL)isKeyExcludedFromWebScript:(const char *)fp8;
- (id)availableDictionaries;
- (id)dictionaryTitle:(id)fp8;
- (void)dictionary:(id)fp8 setTitle:(id)fp12;
- (id)dictionaryID:(id)fp8;
- (void)dictionary:(id)fp8 setID:(id)fp12;
- (id)dictionaryName:(id)fp8;
- (id)dictionaryPath:(id)fp8;
- (id)dictionaryForName:(id)fp8;
- (id)dictionaryForPath:(id)fp8;
- (id)dictionary:(id)fp8 findKey:(id)fp12 byMethod:(id)fp16 maxRecordCount:(id)fp20 skipCount:(id)fp24;
- (id)dictionary:(id)fp8 findKey:(id)fp12 byMethod:(id)fp16;
- (id)dictionary:(id)fp8 wordAtIndex:(id)fp12;
- (id)guessesForWord:(id)fp8;

@end
@interface DCMDictionaryObj : NSObject
{
    NSString *_dictionaryPath;
    struct OpaqueDCMObjectID *_dictionaryID;
    struct OpaqueDCMObjectRef *_dictionaryRef;
    struct FSSpec _dictionarySpec;
    NSDictionary *_fieldInfo;
    unsigned int *_prefetchFieldTags;
    NSMutableArray *_prefetchFieldArray;
    BOOL _initiallyNotRegistered;
    BOOL _registration;
    BOOL _opened;
}

+ (id)registeredDictionaries;
+ (id)dictionaryObjArray;
- (id)initWithPath:(id)fp8;
- (oneway void)release;
- (void)dealloc;
- (void)cleanup;
- (BOOL)setRegistration:(BOOL)fp8;
- (BOOL)opened;
- (BOOL)setOpened:(BOOL)fp8;
- (id)dictionaryPath;
- (struct OpaqueDCMObjectID *)dictionaryID;
- (struct OpaqueDCMObjectRef *)dictionaryRef;
- (id)dictionaryName;
- (id)fieldInfo;
- (id)propertyData:(unsigned long)fp8;
- (void)setPrefetchField:(id)fp8;
- (id)findKey:(id)fp8 inField:(unsigned long)fp12 byMethod:(unsigned long)fp16;
- (id)findKey:(id)fp8 inField:(unsigned long)fp12 byMethod:(unsigned long)fp16 maxRecordCount:(unsigned int)fp20 skipCount:(unsigned int)fp24;
- (id)recordAtIndex:(unsigned int)fp8 forField:(unsigned long)fp12;
- (unsigned int)count;

@end

@interface DSDictionary : DCMDictionaryObj
{
    NSString *_title;
    NSNumber *_id;
    NSMutableDictionary *_properties;
}

- (id)title;
- (void)setTitle:(id)fp8;
- (id)getID;
- (void)setID:(id)fp8;
- (id)valueForKey:(id)fp8;
- (void)setValue:(id)fp8 forKey:(id)fp12;

@end

@interface NSAppleEventDescriptor (CocoaExtensions)
+ (id)addressDescriptorWithIdentifier:(id)fp8;
@end


@interface NSArray (CocoaExtensions)
- (id)arrayByCommonWith:(id)fp8;
@end

@interface NSNumber (CocoaExtensions)
+ (id)numberWithFourCharCode:(unsigned long)fp8;
- (unsigned long)fourCharCodeValue;
@end

@interface NSString (CocoaExtensions)
+ (id)stringWithFourCharCode:(unsigned long)fp8;
- (unsigned long)fourCharCodeValue;
@end


@interface DictionaryFoundRecords : NSObject
{
    NSMutableArray *_keyStringArray;
    NSMutableDictionary *_recordDictionary;
    BOOL _needToSortKeyArray;
    NSArray *_sortedKeyArray;
}

- (void)dealloc;
- (void)addRecord:(id)fp8;
- (unsigned int)count;
- (id)keyStringArray;
- (id)recordArray;
- (id)recordArrayForKey:(id)fp8;
- (id)recordArrayForKey:(id)fp8 withDictionary:(id)fp12;

@end

@interface DictionaryRecord : NSObject
{
    DCMDictionaryObj *_dictionary;
    unsigned int _keyFieldTag;
    NSString *_keyString;
    unsigned int _uniqueID;
    unsigned int _index;
    NSMutableDictionary *_data;
}

+ (id)recordWithKey:(id)fp8 keyFieldTag:(unsigned long)fp12 uniqueID:(unsigned long)fp16 dictionary:(id)fp20;
- (void)dealloc;
- (id)initWithKey:(id)fp8 keyFieldTag:(unsigned long)fp12 uniqueID:(unsigned long)fp16 dictionary:(id)fp20;
- (BOOL)isEqualToRecord:(id)fp8;
- (id)keyString;
- (unsigned long)keyFieldTag;
- (id)dictionary;
- (unsigned long)uniqueID;
- (unsigned int)_keyStringByteLength;
- (unsigned short *)_copyKeyStringCharacters;
- (id)dataForFieldTag:(id)fp8 withCache:(BOOL)fp12;
- (void)setData:(id)fp8 forFieldTag:(id)fp12;
- (void)_setIndex:(unsigned int)fp8;
- (unsigned int)index;
- (id)nextRecord;
- (id)previousRecord;
- (id)recordAtIndex:(unsigned int)fp8;
- (void)addDataFromAERecord:(const struct AEDesc *)fp8;
- (id)_keyString:(unsigned long)fp8 inAERecord:(const struct AEDesc *)fp12;

@end
#define WRAPPERSTRING @"<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /><title></title><style type=\"text/css\">@import \"file://localhost/Library/Widgets/Dictionary.wdgt/DictionaryData.css\";</style></head><body>%@</body></html>"
int main (int argc, const char * argv[]) {
    NSAutoreleasePool * pool = [[NSAutoreleasePool alloc] init];
	NSString *word=[NSString stringWithUTF8String:argv[1]];
//	NSLog(@"word %@",word);
	
	NSString *menuExtraPath=@"/Library/Widgets/Dictionary.wdgt/Dictionary.widgetplugin";
	NSBundle *menuExtra=[NSBundle bundleWithPath:menuExtraPath];
	[menuExtra load];
	id dictScript=[[NSClassFromString(@"DictionaryScriptObject") alloc]init];
	id wordScript=[[NSClassFromString(@"WordScriptObject") alloc]init];
	DSDictionary *dictionary=nil;
	NSString *dictionaryName=nil;
	if (argc>2)
		dictionaryName=[NSString stringWithUTF8String:argv[2]];
	
	if (dictionaryName)
		dictionary=[dictScript dictionaryForName:dictionaryName];
	else
		dictionary=[[dictScript availableDictionaries]objectAtIndex:0];
	NSArray *array=(NSArray *)[dictScript dictionary:dictionary
											 findKey:word 
											byMethod:@"bgwt"];
	if (![array count])return -1;

	NSString *string=[wordScript processWithXSLT:[[array objectAtIndex:0] dataForFieldTag:@"dsbd" withCache:NO]];
	string=[string substringFromIndex:NSMaxRange([string rangeOfString:@"?>"])];
	string=[NSString stringWithFormat:WRAPPERSTRING,string];
	NSData *data=[string dataUsingEncoding:NSUTF8StringEncoding];
	[(NSFileHandle *)[NSFileHandle fileHandleWithStandardOutput]writeData:data];
    [pool release];
    return 0;
}
